name: ui-checks
on:
  push:
    paths:
      - 'ui-checks/tests/**'
      - 'ui-checks/**'
  pull_request:
    types: [ 'opened', 'edited', 'reopened', 'synchronize' ]
    paths:
      - 'kafka-ui-api/**'
      - 'kafka-ui-contract/**'
      - 'kafka-ui-react-app/**'
      - 'kafka-ui-e2e-checks/**'
      - 'e2e/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/checkout@v2
      - name: Set the values
        id: set_env_values
        run: |
          cat "./kafka-ui-e2e-checks/.env.ci" >> "./kafka-ui-e2e-checks/.env"
      - name: pull docker
        id: pull_selenoid
        run: |
          docker pull selenoid/vnc:chrome_86.0
      - name: Set up JDK 1.13
        uses: actions/setup-java@v1
        with:
          java-version: 1.13
      - name: Build with Maven
        id: build_app
        run: |
          mvn clean package -DskipTests ${{ github.event.inputs.extraMavenOptions }}
      - name: compose app
        id: compose_app
        run: |
          docker-compose -f ./docker/kafka-ui.yaml up -d
#      - name: ui-checks run
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -pl '!kafka-ui-api' test -Pprod
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install operating system dependencies
        run: npx playwright install --with-deps
      - name: Run ui-checks playwright tests
        run: cd ui-checks && npm i && npm run gen:sources && npm test